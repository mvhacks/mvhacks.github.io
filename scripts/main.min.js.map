{"version":3,"sources":["mdlComponentHandler.js","button.js","snackbar.js","textfield.js","layout.js","ripple.js","main.js"],"names":["componentHandler","upgradeDom","optJsClass","optCssClass","upgradeElement","element","upgradeElements","elements","upgradeAllRegistered","registerUpgradedCallback","jsClass","callback","register","config","downgradeElements","nodes","findRegisteredClass_","name","optReplace","i","registeredComponents_","length","className","getUpgradedListOfElement_","dataUpgraded","getAttribute","split","isElementUpgraded_","indexOf","upgradeDomInternal","cssClass","registeredClass","document","querySelectorAll","n","upgradeElementInternal","Element","Error","upgradedList","classesToUpgrade","push","classList","forEach","component","contains","setAttribute","join","instance","classConstructor","componentConfigProperty_","createdComponents_","j","m","callbacks","widget","ev","window","CustomEvent","bubbles","cancelable","createEvent","initEvent","dispatchEvent","upgradeElementsInternal","Array","isArray","prototype","slice","call","HTMLElement","children","registerInternal","widgetMissing","newConfig","constructor","classAsString","item","hasOwnProperty","registerUpgradedCallbackInternal","regClass","upgradeAllRegisteredInternal","deconstructComponentInternal","componentIndex","splice","upgrades","element_","componentPlace","downgradeNodesInternal","downgradeNode","node","filter","NodeList","Node","ComponentConfigPublic","ComponentConfig","Component","addEventListener","createElement","documentElement","add","MaterialButton","this","init","Constant_","CssClasses_","RIPPLE_EFFECT","RIPPLE_CONTAINER","RIPPLE","blurHandler_","event","blur","disable","disabled","enable","rippleContainer","rippleElement_","appendChild","boundRippleBlurHandler","bind","boundButtonBlurHandler","MaterialSnackbar","textElement_","querySelector","cssClasses_","MESSAGE","actionElement_","ACTION","active","actionHandler_","undefined","message_","actionText_","queuedNotifications_","setActionHidden_","ANIMATION_LENGTH","SNACKBAR","ACTIVE","displaySnackbar_","textContent","setTimeout","cleanup_","timeout_","showSnackbar","data","checkQueue_","shift","remove","Boolean","removeEventListener","value","removeAttribute","MaterialTextfield","maxRows","NO_MAX_ROWS","MAX_ROWS_ATTRIBUTE","LABEL","INPUT","IS_DIRTY","IS_FOCUSED","IS_DISABLED","IS_INVALID","IS_UPGRADED","HAS_PLACEHOLDER","onKeyDown_","currentRowCount","target","keyCode","preventDefault","onFocus_","onBlur_","onReset_","updateClasses_","checkDisabled","checkValidity","checkDirty","checkFocus","input_","validity","valid","change","label_","hasAttribute","parseInt","isNaN","boundUpdateClassesHandler","boundFocusHandler","boundBlurHandler","boundResetHandler","boundKeyDownHandler","invalid","focus","MaterialLayoutTab","tab","tabs","panels","layout","selectTab","href","panel","content_","resetTabState_","resetPanelState_","IS_ACTIVE","tabBar_","JS_RIPPLE_EFFECT","ripple","e","charAt","show","MaterialLayout","MAX_WIDTH","TAB_SCROLL_PIXELS","RESIZE_TIMEOUT","MENU_ICON","CHEVRON_LEFT","CHEVRON_RIGHT","Keycodes_","ENTER","ESCAPE","SPACE","Mode_","STANDARD","SEAMED","WATERFALL","SCROLL","CONTAINER","HEADER","DRAWER","CONTENT","DRAWER_BTN","ICON","RIPPLE_IGNORE_EVENTS","HEADER_SEAMED","HEADER_WATERFALL","HEADER_SCROLL","FIXED_HEADER","OBFUSCATOR","TAB_BAR","TAB_CONTAINER","TAB","TAB_BAR_BUTTON","TAB_BAR_LEFT_BUTTON","TAB_BAR_RIGHT_BUTTON","PANEL","HAS_DRAWER","HAS_TABS","HAS_SCROLLING_HEADER","CASTING_SHADOW","IS_COMPACT","IS_SMALL_SCREEN","IS_DRAWER_OPEN","IS_ANIMATING","ON_LARGE_SCREEN","ON_SMALL_SCREEN","contentScrollHandler_","header_","headerVisible","scrollTop","keyboardEventHandler_","evt","drawer_","toggleDrawer","screenSizeHandler_","screenSizeMediaQuery_","matches","obfuscator_","drawerToggleHandler_","type","headerTransitionEndHandler_","headerClickHandler_","tabBar","k","drawerButton","toggle","container","focusedElement","parentElement","insertBefore","removeChild","directChildren","childNodes","numChildren","c","child","persisted","style","overflowY","requestAnimationFrame","mode","drawerButtonIcon","innerHTML","firstChild","obfuscator","matchMedia","addListener","tabContainer","leftButton","leftButtonIcon","scrollLeft","rightButton","rightButtonIcon","tabUpdateHandler","scrollWidth","offsetWidth","windowResizeHandler","resizeTimeoutId_","clearTimeout","MaterialRipple","INITIAL_SCALE","INITIAL_SIZE","INITIAL_OPACITY","FINAL_OPACITY","FINAL_SCALE","RIPPLE_CENTER","RIPPLE_EFFECT_IGNORE_EVENTS","IS_VISIBLE","downHandler_","width","height","rect","getBoundingClientRect","boundHeight","boundWidth","rippleSize_","Math","sqrt","ignoringMouseDown_","getFrameCount","setFrameCount","x","y","bound","currentTarget","clientX","clientY","round","touches","left","top","setRippleXY","setRippleStyles","animFrameHandler","upHandler_","detail","recentering","frameCount_","x_","y_","boundDownHandler","boundUpHandler","fC","getRippleElement","newX","newY","start","transformString","scale","offset","webkitTransform","msTransform","transform","isLocalhost","location","hostname","match","navigator","protocol","serviceWorker","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","catch","console","error","dateEnd","calculate","dateStart","Date","timeRemaining","getTime","days","hours","minutes","seconds","getElementById","setInterval","$","masonry","itemSelector","columnWidth","percentPosition","balanceText","reload"],"mappings":"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","file":"main.min.js","sourcesContent":["/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * A component handler interface using the revealing module design pattern.\n * More details on this design pattern here:\n * https://github.com/jasonmayes/mdl-component-design-pattern\n *\n * @author Jason Mayes.\n */\n/* exported componentHandler */\n\n// Pre-defining the componentHandler interface, for closure documentation and\n// static verification.\nvar componentHandler = {\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  upgradeDom: function (optJsClass, optCssClass) {\n  },\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  upgradeElement: function (element, optJsClass) {\n  },\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  upgradeElements: function (elements) {\n  },\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  upgradeAllRegistered: function () {\n  },\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  registerUpgradedCallback: function (jsClass, callback) {\n  },\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config the registration configuration\n   */\n  register: function (config) {\n  },\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  downgradeElements: function (nodes) {\n  }\n};\n\ncomponentHandler = (function () {\n  'use strict';\n\n  /** @type {!Array<componentHandler.ComponentConfig>} */\n  var registeredComponents_ = [];\n\n  /** @type {!Array<componentHandler.Component>} */\n  var createdComponents_ = [];\n\n  var componentConfigProperty_ = 'mdlComponentConfigInternal_';\n\n  /**\n   * Searches registered components for a class we are interested in using.\n   * Optionally replaces a match with passed object if specified.\n   *\n   * @param {string} name The name of a class we want to use.\n   * @param {componentHandler.ComponentConfig=} optReplace Optional object to replace match with.\n   * @return {!Object|boolean}\n   * @private\n   */\n  function findRegisteredClass_(name, optReplace) {\n    for (var i = 0; i < registeredComponents_.length; i++) {\n      if (registeredComponents_[i].className === name) {\n        if (typeof optReplace !== 'undefined') {\n          registeredComponents_[i] = optReplace;\n        }\n        return registeredComponents_[i];\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns an array of the classNames of the upgraded classes on the element.\n   *\n   * @param {!Element} element The element to fetch data from.\n   * @return {!Array<string>}\n   * @private\n   */\n  function getUpgradedListOfElement_(element) {\n    var dataUpgraded = element.getAttribute('data-upgraded');\n    // Use `['']` as default value to conform the `,name,name...` style.\n    return dataUpgraded === null ? [''] : dataUpgraded.split(',');\n  }\n\n  /**\n   * Returns true if the given element has already been upgraded for the given\n   * class.\n   *\n   * @param {!Element} element The element we want to check.\n   * @param {string} jsClass The class to check for.\n   * @returns {boolean}\n   * @private\n   */\n  function isElementUpgraded_(element, jsClass) {\n    var upgradedList = getUpgradedListOfElement_(element);\n    return upgradedList.indexOf(jsClass) !== -1;\n  }\n\n  /**\n   * Searches existing DOM for elements of our component type and upgrades them\n   * if they have not already been upgraded.\n   *\n   * @param {string=} optJsClass the programatic name of the element class we\n   * need to create a new instance of.\n   * @param {string=} optCssClass the name of the CSS class elements of this\n   * type will have.\n   */\n  function upgradeDomInternal(optJsClass, optCssClass) {\n    if (typeof optJsClass === 'undefined' &&\n      typeof optCssClass === 'undefined') {\n      for (var i = 0; i < registeredComponents_.length; i++) {\n        upgradeDomInternal(registeredComponents_[i].className,\n          registeredComponents_[i].cssClass);\n      }\n    } else {\n      var jsClass = /** @type {string} */ (optJsClass);\n      if (typeof optCssClass === 'undefined') {\n        var registeredClass = findRegisteredClass_(jsClass);\n        if (registeredClass) {\n          optCssClass = registeredClass.cssClass;\n        }\n      }\n\n      var elements = document.querySelectorAll('.' + optCssClass);\n      for (var n = 0; n < elements.length; n++) {\n        upgradeElementInternal(elements[n], jsClass);\n      }\n    }\n  }\n\n  /**\n   * Upgrades a specific element rather than all in the DOM.\n   *\n   * @param {!Element} element The element we wish to upgrade.\n   * @param {string=} optJsClass Optional name of the class we want to upgrade\n   * the element to.\n   */\n  function upgradeElementInternal(element, optJsClass) {\n    // Verify argument type.\n    if (!(typeof element === 'object' && element instanceof Element)) {\n      throw new Error('Invalid argument provided to upgrade MDL element.');\n    }\n    var upgradedList = getUpgradedListOfElement_(element);\n    var classesToUpgrade = [];\n    // If jsClass is not provided scan the registered components to find the\n    // ones matching the element's CSS classList.\n    if (!optJsClass) {\n      var classList = element.classList;\n      registeredComponents_.forEach(function (component) {\n        // Match CSS & Not to be upgraded & Not upgraded.\n        if (classList.contains(component.cssClass) &&\n          classesToUpgrade.indexOf(component) === -1 && !isElementUpgraded_(element, component.className)) {\n          classesToUpgrade.push(component);\n        }\n      });\n    } else if (!isElementUpgraded_(element, optJsClass)) {\n      classesToUpgrade.push(findRegisteredClass_(optJsClass));\n    }\n\n    // Upgrade the element for each classes.\n    for (var i = 0, n = classesToUpgrade.length, registeredClass; i < n; i++) {\n      registeredClass = classesToUpgrade[i];\n      if (registeredClass) {\n        // Mark element as upgraded.\n        upgradedList.push(registeredClass.className);\n        element.setAttribute('data-upgraded', upgradedList.join(','));\n        var instance = new registeredClass.classConstructor(element);\n        instance[componentConfigProperty_] = registeredClass;\n        createdComponents_.push(instance);\n        // Call any callbacks the user has registered with this component type.\n        for (var j = 0, m = registeredClass.callbacks.length; j < m; j++) {\n          registeredClass.callbacks[j](element);\n        }\n\n        if (registeredClass.widget) {\n          // Assign per element instance for control over API\n          element[registeredClass.className] = instance;\n        }\n      } else {\n        throw new Error(\n          'Unable to find a registered component for the given class.');\n      }\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new CustomEvent('mdl-componentupgraded', {\n          bubbles: true, cancelable: false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentupgraded', true, true);\n      }\n      element.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Upgrades a specific list of elements rather than all in the DOM.\n   *\n   * @param {!Element|!Array<!Element>|!NodeList|!HTMLCollection} elements\n   * The elements we wish to upgrade.\n   */\n  function upgradeElementsInternal(elements) {\n    if (!Array.isArray(elements)) {\n      if (elements instanceof Element) {\n        elements = [elements];\n      } else {\n        elements = Array.prototype.slice.call(elements);\n      }\n    }\n    for (var i = 0, n = elements.length, element; i < n; i++) {\n      element = elements[i];\n      if (element instanceof HTMLElement) {\n        upgradeElementInternal(element);\n        if (element.children.length > 0) {\n          upgradeElementsInternal(element.children);\n        }\n      }\n    }\n  }\n\n  /**\n   * Registers a class for future use and attempts to upgrade existing DOM.\n   *\n   * @param {componentHandler.ComponentConfigPublic} config\n   */\n  function registerInternal(config) {\n    // In order to support both Closure-compiled and uncompiled code accessing\n    // this method, we need to allow for both the dot and array syntax for\n    // property access. You'll therefore see the `foo.bar || foo['bar']`\n    // pattern repeated across this method.\n    var widgetMissing = (typeof config.widget === 'undefined' &&\n    typeof config['widget'] === 'undefined');\n    var widget = true;\n\n    if (!widgetMissing) {\n      widget = config.widget || config['widget'];\n    }\n\n    var newConfig = /** @type {componentHandler.ComponentConfig} */ ({\n      classConstructor: config.constructor || config['constructor'],\n      className: config.classAsString || config['classAsString'],\n      cssClass: config.cssClass || config['cssClass'],\n      widget: widget,\n      callbacks: []\n    });\n\n    registeredComponents_.forEach(function (item) {\n      if (item.cssClass === newConfig.cssClass) {\n        throw new Error('The provided cssClass has already been registered: ' + item.cssClass);\n      }\n      if (item.className === newConfig.className) {\n        throw new Error('The provided className has already been registered');\n      }\n    });\n\n    if (config.constructor.prototype\n        .hasOwnProperty(componentConfigProperty_)) {\n      throw new Error(\n        'MDL component classes must not have ' + componentConfigProperty_ +\n        ' defined as a property.');\n    }\n\n    var found = findRegisteredClass_(config.classAsString, newConfig);\n\n    if (!found) {\n      registeredComponents_.push(newConfig);\n    }\n  }\n\n  /**\n   * Allows user to be alerted to any upgrades that are performed for a given\n   * component type\n   *\n   * @param {string} jsClass The class name of the MDL component we wish\n   * to hook into for any upgrades performed.\n   * @param {function(!HTMLElement)} callback The function to call upon an\n   * upgrade. This function should expect 1 parameter - the HTMLElement which\n   * got upgraded.\n   */\n  function registerUpgradedCallbackInternal(jsClass, callback) {\n    var regClass = findRegisteredClass_(jsClass);\n    if (regClass) {\n      regClass.callbacks.push(callback);\n    }\n  }\n\n  /**\n   * Upgrades all registered components found in the current DOM. This is\n   * automatically called on window load.\n   */\n  function upgradeAllRegisteredInternal() {\n    for (var n = 0; n < registeredComponents_.length; n++) {\n      upgradeDomInternal(registeredComponents_[n].className);\n    }\n  }\n\n  /**\n   * Check the component for the downgrade method.\n   * Execute if found.\n   * Remove component from createdComponents list.\n   *\n   * @param {?componentHandler.Component} component\n   */\n  function deconstructComponentInternal(component) {\n    if (component) {\n      var componentIndex = createdComponents_.indexOf(component);\n      createdComponents_.splice(componentIndex, 1);\n\n      var upgrades = component.element_.getAttribute('data-upgraded').split(',');\n      var componentPlace = upgrades.indexOf(component[componentConfigProperty_].classAsString);\n      upgrades.splice(componentPlace, 1);\n      component.element_.setAttribute('data-upgraded', upgrades.join(','));\n\n      var ev;\n      if ('CustomEvent' in window && typeof window.CustomEvent === 'function') {\n        ev = new CustomEvent('mdl-componentdowngraded', {\n          bubbles: true, cancelable: false\n        });\n      } else {\n        ev = document.createEvent('Events');\n        ev.initEvent('mdl-componentdowngraded', true, true);\n      }\n      component.element_.dispatchEvent(ev);\n    }\n  }\n\n  /**\n   * Downgrade either a given node, an array of nodes, or a NodeList.\n   *\n   * @param {!Node|!Array<!Node>|!NodeList} nodes\n   */\n  function downgradeNodesInternal(nodes) {\n    /**\n     * Auxiliary function to downgrade a single node.\n     * @param  {!Node} node the node to be downgraded\n     */\n    var downgradeNode = function (node) {\n      createdComponents_.filter(function (item) {\n        return item.element_ === node;\n      }).forEach(deconstructComponentInternal);\n    };\n    if (nodes instanceof Array || nodes instanceof NodeList) {\n      for (var n = 0; n < nodes.length; n++) {\n        downgradeNode(nodes[n]);\n      }\n    } else if (nodes instanceof Node) {\n      downgradeNode(nodes);\n    } else {\n      throw new Error('Invalid argument provided to downgrade MDL nodes.');\n    }\n  }\n\n  // Now return the functions that should be made public with their publicly\n  // facing names...\n  return {\n    upgradeDom: upgradeDomInternal,\n    upgradeElement: upgradeElementInternal,\n    upgradeElements: upgradeElementsInternal,\n    upgradeAllRegistered: upgradeAllRegisteredInternal,\n    registerUpgradedCallback: registerUpgradedCallbackInternal,\n    register: registerInternal,\n    downgradeElements: downgradeNodesInternal\n  };\n})();\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: Function,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: (string|boolean|undefined)\n * }}\n */\ncomponentHandler.ComponentConfigPublic;  // jshint ignore:line\n\n/**\n * Describes the type of a registered component type managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   constructor: !Function,\n *   className: string,\n *   cssClass: string,\n *   widget: (string|boolean),\n *   callbacks: !Array<function(!HTMLElement)>\n * }}\n */\ncomponentHandler.ComponentConfig;  // jshint ignore:line\n\n/**\n * Created component (i.e., upgraded element) type as managed by\n * componentHandler. Provided for benefit of the Closure compiler.\n *\n * @typedef {{\n *   element_: !HTMLElement,\n *   className: string,\n *   classAsString: string,\n *   cssClass: string,\n *   widget: string\n * }}\n */\ncomponentHandler.Component;  // jshint ignore:line\n\n// Export all symbols, for the benefit of Closure compiler.\n// No effect on uncompiled code.\ncomponentHandler['upgradeDom'] = componentHandler.upgradeDom;\ncomponentHandler['upgradeElement'] = componentHandler.upgradeElement;\ncomponentHandler['upgradeElements'] = componentHandler.upgradeElements;\ncomponentHandler['upgradeAllRegistered'] =\n  componentHandler.upgradeAllRegistered;\ncomponentHandler['registerUpgradedCallback'] =\n  componentHandler.registerUpgradedCallback;\ncomponentHandler['register'] = componentHandler.register;\ncomponentHandler['downgradeElements'] = componentHandler.downgradeElements;\nwindow.componentHandler = componentHandler;\nwindow['componentHandler'] = componentHandler;\n\nwindow.addEventListener('load', function () {\n  'use strict';\n\n  /**\n   * Performs a \"Cutting the mustard\" test. If the browser supports the features\n   * tested, adds a mdl-js class to the <html> element. It then upgrades all MDL\n   * components requiring JavaScript.\n   */\n  if ('classList' in document.createElement('div') &&\n    'querySelector' in document &&\n    'addEventListener' in window && Array.prototype.forEach) {\n    document.documentElement.classList.add('mdl-js');\n    componentHandler.upgradeAllRegistered();\n  } else {\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.upgradeElement = function () {\n    };\n    /**\n     * Dummy function to avoid JS errors.\n     */\n    componentHandler.register = function () {\n    };\n  }\n});\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function () {\n  'use strict';\n\n  /**\n   * Class constructor for Button MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialButton = function MaterialButton(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialButton'] = MaterialButton;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialButton.prototype.Constant_ = {\n    // None for now.\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialButton.prototype.CssClasses_ = {\n    RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-button__ripple-container',\n    RIPPLE: 'mdl-ripple'\n  };\n\n  /**\n   * Handle blur of element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialButton.prototype.blurHandler_ = function (event) {\n    if (event) {\n      this.element_.blur();\n    }\n  };\n\n  // Public methods.\n\n  /**\n   * Disable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.disable = function () {\n    this.element_.disabled = true;\n  };\n  MaterialButton.prototype['disable'] = MaterialButton.prototype.disable;\n\n  /**\n   * Enable button.\n   *\n   * @public\n   */\n  MaterialButton.prototype.enable = function () {\n    this.element_.disabled = false;\n  };\n  MaterialButton.prototype['enable'] = MaterialButton.prototype.enable;\n\n  /**\n   * Initialize element.\n   */\n  MaterialButton.prototype.init = function () {\n    if (this.element_) {\n      if (this.element_.classList.contains(this.CssClasses_.RIPPLE_EFFECT)) {\n        var rippleContainer = document.createElement('span');\n        rippleContainer.classList.add(this.CssClasses_.RIPPLE_CONTAINER);\n        this.rippleElement_ = document.createElement('span');\n        this.rippleElement_.classList.add(this.CssClasses_.RIPPLE);\n        rippleContainer.appendChild(this.rippleElement_);\n        this.boundRippleBlurHandler = this.blurHandler_.bind(this);\n        this.rippleElement_.addEventListener('mouseup', this.boundRippleBlurHandler);\n        this.element_.appendChild(rippleContainer);\n      }\n      this.boundButtonBlurHandler = this.blurHandler_.bind(this);\n      this.element_.addEventListener('mouseup', this.boundButtonBlurHandler);\n      this.element_.addEventListener('mouseleave', this.boundButtonBlurHandler);\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialButton,\n    classAsString: 'MaterialButton',\n    cssClass: 'mdl-js-button',\n    widget: true\n  });\n})();\n","/**\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n(function () {\n  'use strict';\n\n  /**\n   * Class constructor for Snackbar MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialSnackbar = function MaterialSnackbar(element) {\n    this.element_ = element;\n    this.textElement_ = this.element_.querySelector('.' + this.cssClasses_.MESSAGE);\n    this.actionElement_ = this.element_.querySelector('.' + this.cssClasses_.ACTION);\n    if (!this.textElement_) {\n      throw new Error('There must be a message element for a snackbar.');\n    }\n    if (!this.actionElement_) {\n      throw new Error('There must be an action element for a snackbar.');\n    }\n    this.active = false;\n    this.actionHandler_ = undefined;\n    this.message_ = undefined;\n    this.actionText_ = undefined;\n    this.queuedNotifications_ = [];\n    this.setActionHidden_(true);\n  };\n  window['MaterialSnackbar'] = MaterialSnackbar;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialSnackbar.prototype.Constant_ = {\n    // The duration of the snackbar show/hide animation, in ms.\n    ANIMATION_LENGTH: 250\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialSnackbar.prototype.cssClasses_ = {\n    SNACKBAR: 'mdl-snackbar',\n    MESSAGE: 'mdl-snackbar__text',\n    ACTION: 'mdl-snackbar__action',\n    ACTIVE: 'mdl-snackbar--active'\n  };\n\n  /**\n   * Display the snackbar.\n   *\n   * @private\n   */\n  MaterialSnackbar.prototype.displaySnackbar_ = function () {\n    this.element_.setAttribute('aria-hidden', 'true');\n\n    if (this.actionHandler_) {\n      this.actionElement_.textContent = this.actionText_;\n      this.actionElement_.addEventListener('click', this.actionHandler_);\n      this.setActionHidden_(false);\n    }\n\n    this.textElement_.textContent = this.message_;\n    this.element_.classList.add(this.cssClasses_.ACTIVE);\n    this.element_.setAttribute('aria-hidden', 'false');\n    setTimeout(this.cleanup_.bind(this), this.timeout_);\n\n  };\n\n  /**\n   * Show the snackbar.\n   *\n   * @param {Object} data The data for the notification.\n   * @public\n   */\n  MaterialSnackbar.prototype.showSnackbar = function (data) {\n    if (data === undefined) {\n      throw new Error(\n        'Please provide a data object with at least a message to display.');\n    }\n    if (data['message'] === undefined) {\n      throw new Error('Please provide a message to be displayed.');\n    }\n    if (data['actionHandler'] && !data['actionText']) {\n      throw new Error('Please provide action text with the handler.');\n    }\n    if (this.active) {\n      this.queuedNotifications_.push(data);\n    } else {\n      this.active = true;\n      this.message_ = data['message'];\n      if (data['timeout']) {\n        this.timeout_ = data['timeout'];\n      } else {\n        this.timeout_ = 2750;\n      }\n      if (data['actionHandler']) {\n        this.actionHandler_ = data['actionHandler'];\n      }\n      if (data['actionText']) {\n        this.actionText_ = data['actionText'];\n      }\n      this.displaySnackbar_();\n    }\n  };\n  MaterialSnackbar.prototype['showSnackbar'] = MaterialSnackbar.prototype.showSnackbar;\n\n  /**\n   * Check if the queue has items within it.\n   * If it does, display the next entry.\n   *\n   * @private\n   */\n  MaterialSnackbar.prototype.checkQueue_ = function () {\n    if (this.queuedNotifications_.length > 0) {\n      this.showSnackbar(this.queuedNotifications_.shift());\n    }\n  };\n\n  /**\n   * Cleanup the snackbar event listeners and accessiblity attributes.\n   *\n   * @private\n   */\n  MaterialSnackbar.prototype.cleanup_ = function () {\n    this.element_.classList.remove(this.cssClasses_.ACTIVE);\n    setTimeout(function () {\n      this.element_.setAttribute('aria-hidden', 'true');\n      this.textElement_.textContent = '';\n      if (!Boolean(this.actionElement_.getAttribute('aria-hidden'))) {\n        this.setActionHidden_(true);\n        this.actionElement_.textContent = '';\n        this.actionElement_.removeEventListener('click', this.actionHandler_);\n      }\n      this.actionHandler_ = undefined;\n      this.message_ = undefined;\n      this.actionText_ = undefined;\n      this.active = false;\n      this.checkQueue_();\n    }.bind(this), /** @type {number} */ (this.Constant_.ANIMATION_LENGTH));\n  };\n\n  /**\n   * Set the action handler hidden state.\n   *\n   * @param {boolean} value\n   * @private\n   */\n  MaterialSnackbar.prototype.setActionHidden_ = function (value) {\n    if (value) {\n      this.actionElement_.setAttribute('aria-hidden', 'true');\n    } else {\n      this.actionElement_.removeAttribute('aria-hidden');\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialSnackbar,\n    classAsString: 'MaterialSnackbar',\n    cssClass: 'mdl-js-snackbar',\n    widget: true\n  });\n\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function () {\n  'use strict';\n\n  /**\n   * Class constructor for Textfield MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialTextfield = function MaterialTextfield(element) {\n    this.element_ = element;\n    this.maxRows = this.Constant_.NO_MAX_ROWS;\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialTextfield'] = MaterialTextfield;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialTextfield.prototype.Constant_ = {\n    NO_MAX_ROWS: -1,\n    MAX_ROWS_ATTRIBUTE: 'maxrows'\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialTextfield.prototype.CssClasses_ = {\n    LABEL: 'mdl-textfield__label',\n    INPUT: 'mdl-textfield__input',\n    IS_DIRTY: 'is-dirty',\n    IS_FOCUSED: 'is-focused',\n    IS_DISABLED: 'is-disabled',\n    IS_INVALID: 'is-invalid',\n    IS_UPGRADED: 'is-upgraded',\n    HAS_PLACEHOLDER: 'has-placeholder'\n  };\n\n  /**\n   * Handle input being entered.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onKeyDown_ = function (event) {\n    var currentRowCount = event.target.value.split('\\n').length;\n    if (event.keyCode === 13) {\n      if (currentRowCount >= this.maxRows) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onFocus_ = function (event) {\n    this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle lost focus.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onBlur_ = function (event) {\n    this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n  };\n\n  /**\n   * Handle reset event from out side.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialTextfield.prototype.onReset_ = function (event) {\n    this.updateClasses_();\n  };\n\n  /**\n   * Handle class updates.\n   *\n   * @private\n   */\n  MaterialTextfield.prototype.updateClasses_ = function () {\n    this.checkDisabled();\n    this.checkValidity();\n    this.checkDirty();\n    this.checkFocus();\n  };\n\n  // Public methods.\n\n  /**\n   * Check the disabled state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkDisabled = function () {\n    if (this.input_.disabled) {\n      this.element_.classList.add(this.CssClasses_.IS_DISABLED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DISABLED);\n    }\n  };\n  MaterialTextfield.prototype['checkDisabled'] =\n    MaterialTextfield.prototype.checkDisabled;\n\n  /**\n   * Check the focus state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkFocus = function () {\n    if (Boolean(this.element_.querySelector(':focus'))) {\n      this.element_.classList.add(this.CssClasses_.IS_FOCUSED);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_FOCUSED);\n    }\n  };\n  MaterialTextfield.prototype['checkFocus'] =\n    MaterialTextfield.prototype.checkFocus;\n\n  /**\n   * Check the validity state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkValidity = function () {\n    if (this.input_.validity) {\n      if (this.input_.validity.valid) {\n        this.element_.classList.remove(this.CssClasses_.IS_INVALID);\n      } else {\n        this.element_.classList.add(this.CssClasses_.IS_INVALID);\n      }\n    }\n  };\n  MaterialTextfield.prototype['checkValidity'] =\n    MaterialTextfield.prototype.checkValidity;\n\n  /**\n   * Check the dirty state and update field accordingly.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.checkDirty = function () {\n    if (this.input_.value && this.input_.value.length > 0) {\n      this.element_.classList.add(this.CssClasses_.IS_DIRTY);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_DIRTY);\n    }\n  };\n  MaterialTextfield.prototype['checkDirty'] =\n    MaterialTextfield.prototype.checkDirty;\n\n  /**\n   * Disable text field.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.disable = function () {\n    this.input_.disabled = true;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['disable'] = MaterialTextfield.prototype.disable;\n\n  /**\n   * Enable text field.\n   *\n   * @public\n   */\n  MaterialTextfield.prototype.enable = function () {\n    this.input_.disabled = false;\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['enable'] = MaterialTextfield.prototype.enable;\n\n  /**\n   * Update text field value.\n   *\n   * @param {string} value The value to which to set the control (optional).\n   * @public\n   */\n  MaterialTextfield.prototype.change = function (value) {\n\n    this.input_.value = value || '';\n    this.updateClasses_();\n  };\n  MaterialTextfield.prototype['change'] = MaterialTextfield.prototype.change;\n\n  /**\n   * Initialize element.\n   */\n  MaterialTextfield.prototype.init = function () {\n\n    if (this.element_) {\n      this.label_ = this.element_.querySelector('.' + this.CssClasses_.LABEL);\n      this.input_ = this.element_.querySelector('.' + this.CssClasses_.INPUT);\n\n      if (this.input_) {\n        if (this.input_.hasAttribute(\n            /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE))) {\n          this.maxRows = parseInt(this.input_.getAttribute(\n            /** @type {string} */ (this.Constant_.MAX_ROWS_ATTRIBUTE)), 10);\n          if (isNaN(this.maxRows)) {\n            this.maxRows = this.Constant_.NO_MAX_ROWS;\n          }\n        }\n\n        if (this.input_.hasAttribute('placeholder')) {\n          this.element_.classList.add(this.CssClasses_.HAS_PLACEHOLDER);\n        }\n\n        this.boundUpdateClassesHandler = this.updateClasses_.bind(this);\n        this.boundFocusHandler = this.onFocus_.bind(this);\n        this.boundBlurHandler = this.onBlur_.bind(this);\n        this.boundResetHandler = this.onReset_.bind(this);\n        this.input_.addEventListener('input', this.boundUpdateClassesHandler);\n        this.input_.addEventListener('focus', this.boundFocusHandler);\n        this.input_.addEventListener('blur', this.boundBlurHandler);\n        this.input_.addEventListener('reset', this.boundResetHandler);\n\n        if (this.maxRows !== this.Constant_.NO_MAX_ROWS) {\n          // TODO: This should handle pasting multi line text.\n          // Currently doesn't.\n          this.boundKeyDownHandler = this.onKeyDown_.bind(this);\n          this.input_.addEventListener('keydown', this.boundKeyDownHandler);\n        }\n        var invalid = this.element_.classList\n          .contains(this.CssClasses_.IS_INVALID);\n        this.updateClasses_();\n        this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n        if (invalid) {\n          this.element_.classList.add(this.CssClasses_.IS_INVALID);\n        }\n        if (this.input_.hasAttribute('autofocus')) {\n          this.element_.focus();\n          this.checkFocus();\n        }\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialTextfield,\n    classAsString: 'MaterialTextfield',\n    cssClass: 'mdl-js-textfield',\n    widget: true\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function () {\n  'use strict';\n\n  /**\n   * Class constructor for Layout MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialLayout = function MaterialLayout(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialLayout'] = MaterialLayout;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialLayout.prototype.Constant_ = {\n    MAX_WIDTH: '(max-width: 1024px)',\n    TAB_SCROLL_PIXELS: 100,\n    RESIZE_TIMEOUT: 100,\n\n    MENU_ICON: '&#xE5D2;',\n    CHEVRON_LEFT: 'chevron_left',\n    CHEVRON_RIGHT: 'chevron_right'\n  };\n\n  /**\n   * Keycodes, for code readability.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialLayout.prototype.Keycodes_ = {\n    ENTER: 13,\n    ESCAPE: 27,\n    SPACE: 32\n  };\n\n  /**\n   * Modes.\n   *\n   * @enum {number}\n   * @private\n   */\n  MaterialLayout.prototype.Mode_ = {\n    STANDARD: 0,\n    SEAMED: 1,\n    WATERFALL: 2,\n    SCROLL: 3\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialLayout.prototype.CssClasses_ = {\n    CONTAINER: 'mdl-layout__container',\n    HEADER: 'mdl-layout__header',\n    DRAWER: 'mdl-layout__drawer',\n    CONTENT: 'mdl-layout__content',\n    DRAWER_BTN: 'mdl-layout__drawer-button',\n\n    ICON: 'material-icons',\n\n    JS_RIPPLE_EFFECT: 'mdl-js-ripple-effect',\n    RIPPLE_CONTAINER: 'mdl-layout__tab-ripple-container',\n    RIPPLE: 'mdl-ripple',\n    RIPPLE_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n\n    HEADER_SEAMED: 'mdl-layout__header--seamed',\n    HEADER_WATERFALL: 'mdl-layout__header--waterfall',\n    HEADER_SCROLL: 'mdl-layout__header--scroll',\n\n    FIXED_HEADER: 'mdl-layout--fixed-header',\n    OBFUSCATOR: 'mdl-layout__obfuscator',\n\n    TAB_BAR: 'mdl-layout__tab-bar',\n    TAB_CONTAINER: 'mdl-layout__tab-bar-container',\n    TAB: 'mdl-layout__tab',\n    TAB_BAR_BUTTON: 'mdl-layout__tab-bar-button',\n    TAB_BAR_LEFT_BUTTON: 'mdl-layout__tab-bar-left-button',\n    TAB_BAR_RIGHT_BUTTON: 'mdl-layout__tab-bar-right-button',\n    PANEL: 'mdl-layout__tab-panel',\n\n    HAS_DRAWER: 'has-drawer',\n    HAS_TABS: 'has-tabs',\n    HAS_SCROLLING_HEADER: 'has-scrolling-header',\n    CASTING_SHADOW: 'is-casting-shadow',\n    IS_COMPACT: 'is-compact',\n    IS_SMALL_SCREEN: 'is-small-screen',\n    IS_DRAWER_OPEN: 'is-visible',\n    IS_ACTIVE: 'is-active',\n    IS_UPGRADED: 'is-upgraded',\n    IS_ANIMATING: 'is-animating',\n\n    ON_LARGE_SCREEN: 'mdl-layout--large-screen-only',\n    ON_SMALL_SCREEN: 'mdl-layout--small-screen-only'\n\n  };\n\n  /**\n   * Handles scrolling on the content.\n   *\n   * @private\n   */\n  MaterialLayout.prototype.contentScrollHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_ANIMATING)) {\n      return;\n    }\n\n    var headerVisible =\n      !this.element_.classList.contains(this.CssClasses_.IS_SMALL_SCREEN) ||\n      this.element_.classList.contains(this.CssClasses_.FIXED_HEADER);\n\n    if (this.content_.scrollTop > 0 && !this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n      this.header_.classList.add(this.CssClasses_.IS_COMPACT);\n      if (headerVisible) {\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n      }\n    } else if (this.content_.scrollTop <= 0 &&\n      this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n      if (headerVisible) {\n        this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n      }\n    }\n  };\n\n  /**\n   * Handles a keyboard event on the drawer.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialLayout.prototype.keyboardEventHandler_ = function (evt) {\n    // Only react when the drawer is open.\n    if (evt.keyCode === this.Keycodes_.ESCAPE &&\n      this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n      this.toggleDrawer();\n    }\n  };\n\n  /**\n   * Handles changes in screen size.\n   *\n   * @private\n   */\n  MaterialLayout.prototype.screenSizeHandler_ = function () {\n    if (this.screenSizeMediaQuery_.matches) {\n      this.element_.classList.add(this.CssClasses_.IS_SMALL_SCREEN);\n    } else {\n      this.element_.classList.remove(this.CssClasses_.IS_SMALL_SCREEN);\n      // Collapse drawer (if any) when moving to a large screen size.\n      if (this.drawer_) {\n        this.drawer_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n        this.obfuscator_.classList.remove(this.CssClasses_.IS_DRAWER_OPEN);\n      }\n    }\n  };\n\n  /**\n   * Handles events of drawer button.\n   *\n   * @param {Event} evt The event that fired.\n   * @private\n   */\n  MaterialLayout.prototype.drawerToggleHandler_ = function (evt) {\n    if (evt && (evt.type === 'keydown')) {\n      if (evt.keyCode === this.Keycodes_.SPACE || evt.keyCode === this.Keycodes_.ENTER) {\n        // prevent scrolling in drawer nav\n        evt.preventDefault();\n      } else {\n        // prevent other keys\n        return;\n      }\n    }\n\n    this.toggleDrawer();\n  };\n\n  /**\n   * Handles (un)setting the `is-animating` class\n   *\n   * @private\n   */\n  MaterialLayout.prototype.headerTransitionEndHandler_ = function () {\n    this.header_.classList.remove(this.CssClasses_.IS_ANIMATING);\n  };\n\n  /**\n   * Handles expanding the header on click\n   *\n   * @private\n   */\n  MaterialLayout.prototype.headerClickHandler_ = function () {\n    if (this.header_.classList.contains(this.CssClasses_.IS_COMPACT)) {\n      this.header_.classList.remove(this.CssClasses_.IS_COMPACT);\n      this.header_.classList.add(this.CssClasses_.IS_ANIMATING);\n    }\n  };\n\n  /**\n   * Reset tab state, dropping active classes\n   *\n   * @private\n   */\n  MaterialLayout.prototype.resetTabState_ = function (tabBar) {\n    for (var k = 0; k < tabBar.length; k++) {\n      tabBar[k].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n  };\n\n  /**\n   * Reset panel state, droping active classes\n   *\n   * @private\n   */\n  MaterialLayout.prototype.resetPanelState_ = function (panels) {\n    for (var j = 0; j < panels.length; j++) {\n      panels[j].classList.remove(this.CssClasses_.IS_ACTIVE);\n    }\n  };\n\n  /**\n   * Toggle drawer state\n   *\n   * @public\n   */\n  MaterialLayout.prototype.toggleDrawer = function () {\n    var drawerButton = this.element_.querySelector('.' + this.CssClasses_.DRAWER_BTN);\n    this.drawer_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n    this.obfuscator_.classList.toggle(this.CssClasses_.IS_DRAWER_OPEN);\n\n    // Set accessibility properties.\n    if (this.drawer_.classList.contains(this.CssClasses_.IS_DRAWER_OPEN)) {\n      this.drawer_.setAttribute('aria-hidden', 'false');\n      drawerButton.setAttribute('aria-expanded', 'true');\n    } else {\n      this.drawer_.setAttribute('aria-hidden', 'true');\n      drawerButton.setAttribute('aria-expanded', 'false');\n    }\n  };\n  MaterialLayout.prototype['toggleDrawer'] =\n    MaterialLayout.prototype.toggleDrawer;\n\n  /**\n   * Initialize element.\n   */\n  MaterialLayout.prototype.init = function () {\n    if (this.element_) {\n      var container = document.createElement('div');\n      container.classList.add(this.CssClasses_.CONTAINER);\n\n      var focusedElement = this.element_.querySelector(':focus');\n\n      this.element_.parentElement.insertBefore(container, this.element_);\n      this.element_.parentElement.removeChild(this.element_);\n      container.appendChild(this.element_);\n\n      if (focusedElement) {\n        focusedElement.focus();\n      }\n\n      var directChildren = this.element_.childNodes;\n      var numChildren = directChildren.length;\n      for (var c = 0; c < numChildren; c++) {\n        var child = directChildren[c];\n        if (child.classList &&\n          child.classList.contains(this.CssClasses_.HEADER)) {\n          this.header_ = child;\n        }\n\n        if (child.classList &&\n          child.classList.contains(this.CssClasses_.DRAWER)) {\n          this.drawer_ = child;\n        }\n\n        if (child.classList &&\n          child.classList.contains(this.CssClasses_.CONTENT)) {\n          this.content_ = child;\n        }\n      }\n\n      window.addEventListener('pageshow', function (e) {\n        if (e.persisted) { // when page is loaded from back/forward cache\n          // trigger repaint to let layout scroll in safari\n          this.element_.style.overflowY = 'hidden';\n          requestAnimationFrame(function () {\n            this.element_.style.overflowY = '';\n          }.bind(this));\n        }\n      }.bind(this), false);\n\n      if (this.header_) {\n        this.tabBar_ = this.header_.querySelector('.' + this.CssClasses_.TAB_BAR);\n      }\n\n      var mode = this.Mode_.STANDARD;\n\n      if (this.header_) {\n        if (this.header_.classList.contains(this.CssClasses_.HEADER_SEAMED)) {\n          mode = this.Mode_.SEAMED;\n        } else if (this.header_.classList.contains(\n            this.CssClasses_.HEADER_WATERFALL)) {\n          mode = this.Mode_.WATERFALL;\n          this.header_.addEventListener('transitionend',\n            this.headerTransitionEndHandler_.bind(this));\n          this.header_.addEventListener('click',\n            this.headerClickHandler_.bind(this));\n        } else if (this.header_.classList.contains(\n            this.CssClasses_.HEADER_SCROLL)) {\n          mode = this.Mode_.SCROLL;\n          container.classList.add(this.CssClasses_.HAS_SCROLLING_HEADER);\n        }\n\n        if (mode === this.Mode_.STANDARD) {\n          this.header_.classList.add(this.CssClasses_.CASTING_SHADOW);\n          if (this.tabBar_) {\n            this.tabBar_.classList.add(this.CssClasses_.CASTING_SHADOW);\n          }\n        } else if (mode === this.Mode_.SEAMED || mode === this.Mode_.SCROLL) {\n          this.header_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n          if (this.tabBar_) {\n            this.tabBar_.classList.remove(this.CssClasses_.CASTING_SHADOW);\n          }\n        } else if (mode === this.Mode_.WATERFALL) {\n          // Add and remove shadows depending on scroll position.\n          // Also add/remove auxiliary class for styling of the compact version of\n          // the header.\n          this.content_.addEventListener('scroll',\n            this.contentScrollHandler_.bind(this));\n          this.contentScrollHandler_();\n        }\n      }\n\n      // Add drawer toggling button to our layout, if we have an openable drawer.\n      if (this.drawer_) {\n        var drawerButton = this.element_.querySelector('.' +\n          this.CssClasses_.DRAWER_BTN);\n        if (!drawerButton) {\n          drawerButton = document.createElement('div');\n          drawerButton.setAttribute('aria-expanded', 'false');\n          drawerButton.setAttribute('role', 'button');\n          drawerButton.setAttribute('tabindex', '0');\n          drawerButton.classList.add(this.CssClasses_.DRAWER_BTN);\n\n          var drawerButtonIcon = document.createElement('i');\n          drawerButtonIcon.classList.add(this.CssClasses_.ICON);\n          drawerButtonIcon.innerHTML = this.Constant_.MENU_ICON;\n          drawerButton.appendChild(drawerButtonIcon);\n        }\n\n        if (this.drawer_.classList.contains(this.CssClasses_.ON_LARGE_SCREEN)) {\n          //If drawer has ON_LARGE_SCREEN class then add it to the drawer toggle button as well.\n          drawerButton.classList.add(this.CssClasses_.ON_LARGE_SCREEN);\n        } else if (this.drawer_.classList.contains(this.CssClasses_.ON_SMALL_SCREEN)) {\n          //If drawer has ON_SMALL_SCREEN class then add it to the drawer toggle button as well.\n          drawerButton.classList.add(this.CssClasses_.ON_SMALL_SCREEN);\n        }\n\n        drawerButton.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n\n        drawerButton.addEventListener('keydown',\n          this.drawerToggleHandler_.bind(this));\n\n        // Add a class if the layout has a drawer, for altering the left padding.\n        // Adds the HAS_DRAWER to the elements since this.header_ may or may\n        // not be present.\n        this.element_.classList.add(this.CssClasses_.HAS_DRAWER);\n\n        // If we have a fixed header, add the button to the header rather than\n        // the layout.\n        if (this.element_.classList.contains(this.CssClasses_.FIXED_HEADER)) {\n          this.header_.insertBefore(drawerButton, this.header_.firstChild);\n        } else {\n          this.element_.insertBefore(drawerButton, this.content_);\n        }\n\n        var obfuscator = document.createElement('div');\n        obfuscator.classList.add(this.CssClasses_.OBFUSCATOR);\n        this.element_.appendChild(obfuscator);\n        obfuscator.addEventListener('click',\n          this.drawerToggleHandler_.bind(this));\n        this.obfuscator_ = obfuscator;\n\n        this.drawer_.addEventListener('keydown', this.keyboardEventHandler_.bind(this));\n        this.drawer_.setAttribute('aria-hidden', 'true');\n      }\n\n      // Keep an eye on screen size, and add/remove auxiliary class for styling\n      // of small screens.\n      this.screenSizeMediaQuery_ = window.matchMedia(\n        /** @type {string} */ (this.Constant_.MAX_WIDTH));\n      this.screenSizeMediaQuery_.addListener(this.screenSizeHandler_.bind(this));\n      this.screenSizeHandler_();\n\n      // Initialize tabs, if any.\n      if (this.header_ && this.tabBar_) {\n        this.element_.classList.add(this.CssClasses_.HAS_TABS);\n\n        var tabContainer = document.createElement('div');\n        tabContainer.classList.add(this.CssClasses_.TAB_CONTAINER);\n        this.header_.insertBefore(tabContainer, this.tabBar_);\n        this.header_.removeChild(this.tabBar_);\n\n        var leftButton = document.createElement('div');\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n        leftButton.classList.add(this.CssClasses_.TAB_BAR_LEFT_BUTTON);\n        var leftButtonIcon = document.createElement('i');\n        leftButtonIcon.classList.add(this.CssClasses_.ICON);\n        leftButtonIcon.textContent = this.Constant_.CHEVRON_LEFT;\n        leftButton.appendChild(leftButtonIcon);\n        leftButton.addEventListener('click', function () {\n          this.tabBar_.scrollLeft -= this.Constant_.TAB_SCROLL_PIXELS;\n        }.bind(this));\n\n        var rightButton = document.createElement('div');\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_BUTTON);\n        rightButton.classList.add(this.CssClasses_.TAB_BAR_RIGHT_BUTTON);\n        var rightButtonIcon = document.createElement('i');\n        rightButtonIcon.classList.add(this.CssClasses_.ICON);\n        rightButtonIcon.textContent = this.Constant_.CHEVRON_RIGHT;\n        rightButton.appendChild(rightButtonIcon);\n        rightButton.addEventListener('click', function () {\n          this.tabBar_.scrollLeft += this.Constant_.TAB_SCROLL_PIXELS;\n        }.bind(this));\n\n        tabContainer.appendChild(leftButton);\n        tabContainer.appendChild(this.tabBar_);\n        tabContainer.appendChild(rightButton);\n\n        // Add and remove tab buttons depending on scroll position and total\n        // window size.\n        var tabUpdateHandler = function () {\n          if (this.tabBar_.scrollLeft > 0) {\n            leftButton.classList.add(this.CssClasses_.IS_ACTIVE);\n          } else {\n            leftButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n          }\n\n          if (this.tabBar_.scrollLeft <\n            this.tabBar_.scrollWidth - this.tabBar_.offsetWidth) {\n            rightButton.classList.add(this.CssClasses_.IS_ACTIVE);\n          } else {\n            rightButton.classList.remove(this.CssClasses_.IS_ACTIVE);\n          }\n        }.bind(this);\n\n        this.tabBar_.addEventListener('scroll', tabUpdateHandler);\n        tabUpdateHandler();\n\n        // Update tabs when the window resizes.\n        var windowResizeHandler = function () {\n          // Use timeouts to make sure it doesn't happen too often.\n          if (this.resizeTimeoutId_) {\n            clearTimeout(this.resizeTimeoutId_);\n          }\n          this.resizeTimeoutId_ = setTimeout(function () {\n            tabUpdateHandler();\n            this.resizeTimeoutId_ = null;\n          }.bind(this), /** @type {number} */ (this.Constant_.RESIZE_TIMEOUT));\n        }.bind(this);\n\n        window.addEventListener('resize', windowResizeHandler);\n\n        if (this.tabBar_.classList.contains(this.CssClasses_.JS_RIPPLE_EFFECT)) {\n          this.tabBar_.classList.add(this.CssClasses_.RIPPLE_IGNORE_EVENTS);\n        }\n\n        // Select element tabs, document panels\n        var tabs = this.tabBar_.querySelectorAll('.' + this.CssClasses_.TAB);\n        var panels = this.content_.querySelectorAll('.' + this.CssClasses_.PANEL);\n\n        // Create new tabs for each tab element\n        for (var i = 0; i < tabs.length; i++) {\n          new MaterialLayoutTab(tabs[i], tabs, panels, this);\n        }\n      }\n\n      this.element_.classList.add(this.CssClasses_.IS_UPGRADED);\n    }\n  };\n\n  /**\n   * Constructor for an individual tab.\n   *\n   * @constructor\n   * @param {HTMLElement} tab The HTML element for the tab.\n   * @param {!Array<HTMLElement>} tabs Array with HTML elements for all tabs.\n   * @param {!Array<HTMLElement>} panels Array with HTML elements for all panels.\n   * @param {MaterialLayout} layout The MaterialLayout object that owns the tab.\n   */\n  function MaterialLayoutTab(tab, tabs, panels, layout) {\n\n    /**\n     * Auxiliary method to programmatically select a tab in the UI.\n     */\n    function selectTab() {\n      var href = tab.href.split('#')[1];\n      var panel = layout.content_.querySelector('#' + href);\n      layout.resetTabState_(tabs);\n      layout.resetPanelState_(panels);\n      tab.classList.add(layout.CssClasses_.IS_ACTIVE);\n      panel.classList.add(layout.CssClasses_.IS_ACTIVE);\n    }\n\n    if (layout.tabBar_.classList.contains(\n        layout.CssClasses_.JS_RIPPLE_EFFECT)) {\n      var rippleContainer = document.createElement('span');\n      rippleContainer.classList.add(layout.CssClasses_.RIPPLE_CONTAINER);\n      rippleContainer.classList.add(layout.CssClasses_.JS_RIPPLE_EFFECT);\n      var ripple = document.createElement('span');\n      ripple.classList.add(layout.CssClasses_.RIPPLE);\n      rippleContainer.appendChild(ripple);\n      tab.appendChild(rippleContainer);\n    }\n\n    tab.addEventListener('click', function (e) {\n      if (tab.getAttribute('href').charAt(0) === '#') {\n        e.preventDefault();\n        selectTab();\n      }\n    });\n\n    tab.show = selectTab;\n  }\n\n  window['MaterialLayoutTab'] = MaterialLayoutTab;\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialLayout,\n    classAsString: 'MaterialLayout',\n    cssClass: 'mdl-js-layout'\n  });\n})();\n","/**\n * @license\n * Copyright 2015 Google Inc. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function () {\n  'use strict';\n\n  /**\n   * Class constructor for Ripple MDL component.\n   * Implements MDL component design pattern defined at:\n   * https://github.com/jasonmayes/mdl-component-design-pattern\n   *\n   * @constructor\n   * @param {HTMLElement} element The element that will be upgraded.\n   */\n  var MaterialRipple = function MaterialRipple(element) {\n    this.element_ = element;\n\n    // Initialize instance.\n    this.init();\n  };\n  window['MaterialRipple'] = MaterialRipple;\n\n  /**\n   * Store constants in one place so they can be updated easily.\n   *\n   * @enum {string | number}\n   * @private\n   */\n  MaterialRipple.prototype.Constant_ = {\n    INITIAL_SCALE: 'scale(0.0001, 0.0001)',\n    INITIAL_SIZE: '1px',\n    INITIAL_OPACITY: '0.4',\n    FINAL_OPACITY: '0',\n    FINAL_SCALE: ''\n  };\n\n  /**\n   * Store strings for class names defined by this component that are used in\n   * JavaScript. This allows us to simply change it in one place should we\n   * decide to modify at a later date.\n   *\n   * @enum {string}\n   * @private\n   */\n  MaterialRipple.prototype.CssClasses_ = {\n    RIPPLE_CENTER: 'mdl-ripple--center',\n    RIPPLE_EFFECT_IGNORE_EVENTS: 'mdl-js-ripple-effect--ignore-events',\n    RIPPLE: 'mdl-ripple',\n    IS_ANIMATING: 'is-animating',\n    IS_VISIBLE: 'is-visible'\n  };\n\n  /**\n   * Handle mouse / finger down on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRipple.prototype.downHandler_ = function (event) {\n    if (!this.rippleElement_.style.width && !this.rippleElement_.style.height) {\n      var rect = this.element_.getBoundingClientRect();\n      this.boundHeight = rect.height;\n      this.boundWidth = rect.width;\n      this.rippleSize_ = Math.sqrt(rect.width * rect.width +\n          rect.height * rect.height) * 2 + 2;\n      this.rippleElement_.style.width = this.rippleSize_ + 'px';\n      this.rippleElement_.style.height = this.rippleSize_ + 'px';\n    }\n\n    this.rippleElement_.classList.add(this.CssClasses_.IS_VISIBLE);\n\n    if (event.type === 'mousedown' && this.ignoringMouseDown_) {\n      this.ignoringMouseDown_ = false;\n    } else {\n      if (event.type === 'touchstart') {\n        this.ignoringMouseDown_ = true;\n      }\n      var frameCount = this.getFrameCount();\n      if (frameCount > 0) {\n        return;\n      }\n      this.setFrameCount(1);\n      var bound = event.currentTarget.getBoundingClientRect();\n      var x;\n      var y;\n      // Check if we are handling a keyboard click.\n      if (event.clientX === 0 && event.clientY === 0) {\n        x = Math.round(bound.width / 2);\n        y = Math.round(bound.height / 2);\n      } else {\n        var clientX = event.clientX ? event.clientX : event.touches[0].clientX;\n        var clientY = event.clientY ? event.clientY : event.touches[0].clientY;\n        x = Math.round(clientX - bound.left);\n        y = Math.round(clientY - bound.top);\n      }\n      this.setRippleXY(x, y);\n      this.setRippleStyles(true);\n      window.requestAnimationFrame(this.animFrameHandler.bind(this));\n    }\n  };\n\n  /**\n   * Handle mouse / finger up on element.\n   *\n   * @param {Event} event The event that fired.\n   * @private\n   */\n  MaterialRipple.prototype.upHandler_ = function (event) {\n    // Don't fire for the artificial \"mouseup\" generated by a double-click.\n    if (event && event.detail !== 2) {\n      // Allow a repaint to occur before removing this class, so the animation\n      // shows for tap events, which seem to trigger a mouseup too soon after\n      // mousedown.\n      window.setTimeout(function () {\n        this.rippleElement_.classList.remove(this.CssClasses_.IS_VISIBLE);\n      }.bind(this), 0);\n    }\n  };\n\n  /**\n   * Initialize element.\n   */\n  MaterialRipple.prototype.init = function () {\n    if (this.element_) {\n      var recentering =\n        this.element_.classList.contains(this.CssClasses_.RIPPLE_CENTER);\n      if (!this.element_.classList.contains(\n          this.CssClasses_.RIPPLE_EFFECT_IGNORE_EVENTS)) {\n        this.rippleElement_ = this.element_.querySelector('.' +\n          this.CssClasses_.RIPPLE);\n        this.frameCount_ = 0;\n        this.rippleSize_ = 0;\n        this.x_ = 0;\n        this.y_ = 0;\n\n        // Touch start produces a compat mouse down event, which would cause a\n        // second ripples. To avoid that, we use this property to ignore the first\n        // mouse down after a touch start.\n        this.ignoringMouseDown_ = false;\n\n        this.boundDownHandler = this.downHandler_.bind(this);\n        this.element_.addEventListener('mousedown',\n          this.boundDownHandler);\n        this.element_.addEventListener('touchstart',\n          this.boundDownHandler);\n\n        this.boundUpHandler = this.upHandler_.bind(this);\n        this.element_.addEventListener('mouseup', this.boundUpHandler);\n        this.element_.addEventListener('mouseleave', this.boundUpHandler);\n        this.element_.addEventListener('touchend', this.boundUpHandler);\n        this.element_.addEventListener('blur', this.boundUpHandler);\n\n        /**\n         * Getter for frameCount_.\n         * @return {number} the frame count.\n         */\n        this.getFrameCount = function () {\n          return this.frameCount_;\n        };\n\n        /**\n         * Setter for frameCount_.\n         * @param {number} fC the frame count.\n         */\n        this.setFrameCount = function (fC) {\n          this.frameCount_ = fC;\n        };\n\n        /**\n         * Getter for rippleElement_.\n         * @return {Element} the ripple element.\n         */\n        this.getRippleElement = function () {\n          return this.rippleElement_;\n        };\n\n        /**\n         * Sets the ripple X and Y coordinates.\n         * @param  {number} newX the new X coordinate\n         * @param  {number} newY the new Y coordinate\n         */\n        this.setRippleXY = function (newX, newY) {\n          this.x_ = newX;\n          this.y_ = newY;\n        };\n\n        /**\n         * Sets the ripple styles.\n         * @param  {boolean} start whether or not this is the start frame.\n         */\n        this.setRippleStyles = function (start) {\n          if (this.rippleElement_ !== null) {\n            var transformString;\n            var scale;\n            var size;\n            var offset = 'translate(' + this.x_ + 'px, ' + this.y_ + 'px)';\n\n            if (start) {\n              scale = this.Constant_.INITIAL_SCALE;\n              size = this.Constant_.INITIAL_SIZE;\n            } else {\n              scale = this.Constant_.FINAL_SCALE;\n              size = this.rippleSize_ + 'px';\n              if (recentering) {\n                offset = 'translate(' + this.boundWidth / 2 + 'px, ' +\n                  this.boundHeight / 2 + 'px)';\n              }\n            }\n\n            transformString = 'translate(-50%, -50%) ' + offset + scale;\n\n            this.rippleElement_.style.webkitTransform = transformString;\n            this.rippleElement_.style.msTransform = transformString;\n            this.rippleElement_.style.transform = transformString;\n\n            if (start) {\n              this.rippleElement_.classList.remove(this.CssClasses_.IS_ANIMATING);\n            } else {\n              this.rippleElement_.classList.add(this.CssClasses_.IS_ANIMATING);\n            }\n          }\n        };\n\n        /**\n         * Handles an animation frame.\n         */\n        this.animFrameHandler = function () {\n          if (this.frameCount_-- > 0) {\n            window.requestAnimationFrame(this.animFrameHandler.bind(this));\n          } else {\n            this.setRippleStyles(false);\n          }\n        };\n      }\n    }\n  };\n\n  // The component registers itself. It can assume componentHandler is available\n  // in the global scope.\n  componentHandler.register({\n    constructor: MaterialRipple,\n    classAsString: 'MaterialRipple',\n    cssClass: 'mdl-js-ripple-effect',\n    widget: false\n  });\n})();\n","/* !\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* jquery, eslint-env browser*/\n(function () {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n  );\n\n  if (\n    'serviceWorker' in navigator &&\n    (window.location.protocol === 'https:' || isLocalhost)\n  ) {\n    navigator.serviceWorker\n      .register('service-worker.js')\n      .then(function (registration) {\n        // updatefound is fired if service-worker.js changes.\n        registration.onupdatefound = function () {\n          // updatefound is also fired the very first time the SW is installed,\n          // and there's no need to prompt for a reload at that point.\n          // So check here to see if the page is already controlled,\n          // i.e. whether there's an existing service worker.\n          if (navigator.serviceWorker.controller) {\n            // The updatefound event implies that registration.installing is set:\n            // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n            var installingWorker = registration.installing;\n\n            installingWorker.onstatechange = function () {\n              switch (installingWorker.state) {\n                case 'installed':\n                  // At this point, the old content will have been purged and the\n                  // fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in the page's interface.\n                  break;\n\n                case 'redundant':\n                  throw new Error(\n                    'The installing ' + 'service worker became redundant.'\n                  );\n\n                default:\n                // Ignore\n              }\n            };\n          }\n        };\n      })\n      .catch(function (e) {\n        console.error('Error during service worker registration:', e);\n      });\n  }\n\n  // document.querySelector('.mdl-layout__drawer').addEventListener('click', function () {\n  //   document.querySelector('.mdl-layout').MaterialLayout.toggleDrawer();\n  // });\n\n  // document.querySelector('.mdl-layout__drawer').addEventListener('click', function () {\n  //   document.querySelector('.mdl-layout__obfuscator').classList.remove('is-visible');\n  //   this.classList.remove('is-visible');\n  // }, false);\n\n\n  function countdown(dateEnd) {\n    var timer, days, hours, minutes, seconds;\n\n    dateEnd = new Date(dateEnd);\n    dateEnd = dateEnd.getTime();\n\n    if (isNaN(dateEnd)) {\n      return;\n    }\n\n    timer = setInterval(calculate, 1000);\n\n    function calculate() {\n      var dateStart = new Date();\n      var timeRemaining = parseInt((dateEnd - dateStart.getTime()) / 1000)\n\n      if (timeRemaining >= 0) {\n        days = parseInt(timeRemaining / 86400);\n        timeRemaining = (timeRemaining % 86400);\n        hours = parseInt(timeRemaining / 3600);\n        timeRemaining = (timeRemaining % 3600);\n        minutes = parseInt(timeRemaining / 60);\n        timeRemaining = (timeRemaining % 60);\n        seconds = parseInt(timeRemaining);\n\n        //document.getElementById(\"days\").innerHTML    = parseInt(days, 10);\n        document.getElementById('hours').innerHTML = ('0' + hours).slice(-2);\n        document.getElementById('minutes').innerHTML = ('0' + minutes).slice(-2);\n        document.getElementById('seconds').innerHTML = ('0' + seconds).slice(-2);\n      } else {\n        return;\n      }\n    }\n\n    function display(days, hours, minutes, seconds) {\n    }\n  }\n\n  countdown('2017-10-21T20:00:00-07:00');\n\n  $('.staggered-grid').masonry({\n    // options\n    itemSelector: '.grid-item',\n    columnWidth: '.grid-sizer',\n    percentPosition: true\n  });\n\n  balanceText();\n\n  if (navigator.serviceWorker && navigator.serviceWorker.controller) {\n    navigator.serviceWorker.controller.onstatechange = function (e) {\n      if (e.target.state === 'redundant') {\n        //Reload if site is updated\n        window.location.reload();\n      }\n    };\n  }\n\n  /* var vrView = new VRView.Player('#vrview', {\n   image: 'images/pano.jpg',\n   is_stereo: false,\n   width: '800px',\n   height: '400px',\n   distance: 2,\n   });*/\n})();\n"]}